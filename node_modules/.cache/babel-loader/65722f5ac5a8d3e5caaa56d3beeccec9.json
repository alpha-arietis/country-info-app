{"ast":null,"code":"var _jsxFileName = \"/Users/ivoalexandroff/Desktop/ReactP1/country-app/src/App.js\";\nimport React from 'react';\nimport './style.css'; // 1) populate dwopdown list of names with ALL country names from API\n// 1.5) alternatively, have a searchbox that will send search request to API and return country\n// 2) match selected/searched country\n// 3) return the needed country properties from API\n// 4) display these properties in UI\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      countryList: [],\n      countrySelection: 'Russia',\n      selectedCountry: [],\n      countryData: []\n    };\n\n    this.componentDidMount = () => {\n      // populate 'countries' array with ALL available country names from API\n      const list = [];\n      fetch('https://restcountries.eu/rest/v2/all').then(data => data.json()).then(result => {\n        for (let i = 0; i < result.length; i++) {\n          list.push(result[i].name);\n        }\n      });\n      console.log(list);\n      this.setState({\n        countryList: list\n      });\n    };\n\n    this.Answer = () => {\n      return React.createElement(\"select\", {\n        className: \"dropdown\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.countryList.map(el => React.createElement(\"option\", {\n        key: el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, el)));\n    };\n\n    this.testing = () => {\n      console.log(this.state.countryList);\n      this.Answer();\n    };\n\n    this.handleChange = event => {// console.log('changed!')\n      // fetch('https://restcountries.eu/rest/v2/all')\n      // .then(data => data.json())\n      // .then(result => { let { name, currencies, languages, capital, subregion, population, area } = result[136]})\n      // console.log(`${name}, ${subregion}, ${area}km2, ${population} people, ${capital}, ${languages[0].name}, ${currencies[0].name}`)\n      // this.setState({ countryData: [name, currencies, languages, capital, subregion, population, area] })\n      // console.log(this.state.countryData)\n      // })\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"topContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.testing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"TEST LOG\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(this.Answer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.countrySelection), React.createElement(\"img\", {\n      src: \"https://cdn.countryflags.com/thumbs/russia/flag-round-250.png\",\n      alt: \"flag\",\n      height: \"100px\",\n      width: \"100px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottomContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Location: \"), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Area: \"), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Population: \"), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Capital: \"), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Languages: \"), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Currencies: \")));\n  }\n\n}\n\nexport default App;\n/* <select className='dropdown' onChange={this.handleChange}>\n            <option>Choose a country</option>\n            <option>Russia</option>\n            <option>New Zealand</option>\n            <option>Hungary</option>\n          </select> */","map":{"version":3,"sources":["/Users/ivoalexandroff/Desktop/ReactP1/country-app/src/App.js"],"names":["React","App","Component","state","countryList","countrySelection","selectedCountry","countryData","componentDidMount","list","fetch","then","data","json","result","i","length","push","name","console","log","setState","Answer","handleChange","map","el","testing","event","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './style.css'\n\n// 1) populate dwopdown list of names with ALL country names from API\n// 1.5) alternatively, have a searchbox that will send search request to API and return country\n// 2) match selected/searched country\n// 3) return the needed country properties from API\n// 4) display these properties in UI\n\nclass App extends React.Component {\n  \n  state = {\n    countryList: [],\n    countrySelection: 'Russia',\n    selectedCountry: [],\n    countryData: []\n    }\n\n  componentDidMount = () => {\n    // populate 'countries' array with ALL available country names from API\n    const list = []\n    fetch('https://restcountries.eu/rest/v2/all')\n    .then(data => data.json())\n    .then(result => {\n      for(let i = 0; i < result.length; i++) {\n        list.push(result[i].name)\n    }\n  })   \n    console.log(list)\n    this.setState({countryList: list})\n  }\n\n  Answer = () => {\n    return (\n      <select className='dropdown' onChange={this.handleChange}>\n        {this.state.countryList.map((el) => \n      <option key={el}>{el}</option>)}\n      </select>\n    )\n  }\n\n  testing = () => {\n    console.log(this.state.countryList)\n    this.Answer()\n    }\n\n  \n\n  handleChange = (event) => {\n    // console.log('changed!')\n    // fetch('https://restcountries.eu/rest/v2/all')\n    // .then(data => data.json())\n    // .then(result => { let { name, currencies, languages, capital, subregion, population, area } = result[136]})\n      \n      // console.log(`${name}, ${subregion}, ${area}km2, ${population} people, ${capital}, ${languages[0].name}, ${currencies[0].name}`)\n      // this.setState({ countryData: [name, currencies, languages, capital, subregion, population, area] })\n      // console.log(this.state.countryData)\n    // })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='topContainer'>\n          <br/>\n          <button onClick={this.testing}>TEST LOG</button><br/>\n          <this.Answer />\n          <br/>\n          <h1>{this.state.countrySelection}</h1>\n          <img src='https://cdn.countryflags.com/thumbs/russia/flag-round-250.png' alt='flag' height='100px' width='100px'\n          />\n        </div>\n        <br/>\n        <div className='bottomContainer'>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Location: </h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Area: </h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Population: </h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Capital: </h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Languages: </h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Currencies: </h3>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n\n\n/* <select className='dropdown' onChange={this.handleChange}>\n            <option>Choose a country</option>\n            <option>Russia</option>\n            <option>New Zealand</option>\n            <option>Hungary</option>\n          </select> */"]},"metadata":{},"sourceType":"module"}