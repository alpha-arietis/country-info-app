{"ast":null,"code":"var _jsxFileName = \"/Users/ivoalexandroff/Desktop/ReactP1/country-app/src/App.js\";\nimport React from 'react';\nimport './style.css';\nimport Selection from './components/Selection'; // SUCCESS! 1) populate dwopdown list of names with ALL country names from API\n// N/A 1.5) alternatively, have a searchbox that will send search request to API and return country\n// SUCCESS! 2) match selected/searched country\n// 3) return the needed country properties from API\n// 4) display these properties in UI\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      countryList: ['Select a country...'],\n      //countrySelection: 'Russia',\n      selectedCountry: '',\n      countryData: '',\n      countryLanguage: [],\n      countryCurrency: [] //testCountries: ['Russia', 'New Zealand', 'Hungary']\n\n    };\n\n    this.componentDidMount = () => {\n      // populate 'countries' array with ALL available country names from API\n      fetch('https://restcountries.eu/rest/v2/all').then(data => data.json()).then(result => {\n        for (let i = 0; i < result.length; i++) {\n          this.setState(prevState => prevState.countryList.push(String(result[i].name))); //list.push(String(result[i].name)) - IT DID NOT LIKE USING 'list' variable, instead the fix was to update STATE using prevState and put data STRAIGHT into STATE using FOR EACH loop! :D\n        }\n      }); //console.log(list)\n      //this.setState({countryList: list})\n    };\n\n    this.testing = () => {\n      //console.log(this.state.countryList)\n      console.log(this.state.countryLanguage);\n      console.log(this.state.countryCurrency);\n      console.log(this.state.countryData); //this.state.countryList.map((el) => console.log(el))\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        selectedCountry: event.target.value\n      });\n      console.log(event.target.value);\n      fetch(\"https://restcountries.eu/rest/v2/name/\".concat(event.target.value, \"?fullText=true\")).then(data => data.json()).then(result => {\n        this.setState(prevState => prevState.countryData = result[0]);\n\n        for (let i = 0; i < result.length; i++) {\n          this.setState(prevState => prevState.countryLanguage.push(String(result[0].languages[i].name)));\n        }\n\n        for (let i = 0; i < result.length; i++) {\n          this.setState(prevState => prevState.countryCurrency.push(String(result[0].currencies[i].name)));\n        }\n      }); //console.log(this.state.countryData)\n      //{ let { name, currencies, languages, capital, subregion, population, area } = result})\n      //this.setState({ countryData: [name, currencies, languages, capital, subregion, population, area] })\n      //console.log(this.state.countryData)\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"topContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.testing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"TEST LOG\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Selection, {\n      country: this.state.countryList,\n      class: \"dropdown\",\n      handleChange: this.handleChange,\n      value: this.state.selectedCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.selectedCountry), React.createElement(\"img\", {\n      src: this.state.countryData.flag,\n      alt: \"flag\",\n      height: \"100px\",\n      width: \"100px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottomContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Location: \", this.state.countryData.subregion), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Area: \", this.state.countryData.area, \" km\\xB2\"), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Population: \", this.state.countryData.population), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Capital: \", this.state.countryData.capital), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Language: \"), React.createElement(\"img\", {\n      src: \"https://image.flaticon.com/icons/png/128/93/93618.png\",\n      alt: \"\",\n      className: \"smallIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Currency: \")));\n  }\n\n}\n\nexport default App;\n/* <select className='dropdown' onChange={this.handleChange}>\n            <option>Choose a country</option>\n            <option>Russia</option>\n            <option>New Zealand</option>\n            <option>Hungary</option>\n          </select> */","map":{"version":3,"sources":["/Users/ivoalexandroff/Desktop/ReactP1/country-app/src/App.js"],"names":["React","Selection","App","Component","state","countryList","selectedCountry","countryData","countryLanguage","countryCurrency","componentDidMount","fetch","then","data","json","result","i","length","setState","prevState","push","String","name","testing","console","log","handleChange","event","target","value","languages","currencies","render","flag","subregion","area","population","capital"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './style.css'\nimport Selection from './components/Selection'\n\n// SUCCESS! 1) populate dwopdown list of names with ALL country names from API\n// N/A 1.5) alternatively, have a searchbox that will send search request to API and return country\n// SUCCESS! 2) match selected/searched country\n\n// 3) return the needed country properties from API\n// 4) display these properties in UI\n\nclass App extends React.Component {\n  \n  state = {\n    countryList: ['Select a country...'],\n    //countrySelection: 'Russia',\n    selectedCountry: '',\n    countryData: '',\n    countryLanguage: [],\n    countryCurrency: []\n    //testCountries: ['Russia', 'New Zealand', 'Hungary']\n    }\n\n  componentDidMount = () => {\n    // populate 'countries' array with ALL available country names from API\n    fetch('https://restcountries.eu/rest/v2/all')\n    .then(data => data.json())\n    .then(result => {\n      for(let i = 0; i < result.length; i++) {\n        this.setState(prevState => prevState.countryList.push(String(result[i].name)))\n        //list.push(String(result[i].name)) - IT DID NOT LIKE USING 'list' variable, instead the fix was to update STATE using prevState and put data STRAIGHT into STATE using FOR EACH loop! :D\n    }\n  })   \n    //console.log(list)\n    //this.setState({countryList: list})\n}\n  \n  testing = () => {\n    //console.log(this.state.countryList)\n    console.log(this.state.countryLanguage)\n    console.log(this.state.countryCurrency)\n    console.log(this.state.countryData)\n    //this.state.countryList.map((el) => console.log(el))\n    }\n\n  handleChange = (event) => {\n    this.setState({selectedCountry: event.target.value})\n    console.log(event.target.value)\n    \n    fetch(`https://restcountries.eu/rest/v2/name/${event.target.value}?fullText=true`)\n    .then(data => data.json())\n    .then(result => {this.setState(prevState => prevState.countryData = result[0])\n    \n    for (let i = 0; i < result.length; i++) {\n      this.setState(prevState => prevState.countryLanguage.push(String(result[0].languages[i].name)))}\n    for (let i = 0; i < result.length; i++) {\n        this.setState(prevState => prevState.countryCurrency.push(String(result[0].currencies[i].name)))}\n    })\n    \n\n\n      \n    //console.log(this.state.countryData)\n    //{ let { name, currencies, languages, capital, subregion, population, area } = result})\n    //this.setState({ countryData: [name, currencies, languages, capital, subregion, population, area] })\n    //console.log(this.state.countryData)\n    }\n\n  render() {\n    return (\n      <div>\n        <div className='topContainer'>\n          <br/>\n          <button onClick={this.testing}>TEST LOG</button><br/>\n          <Selection country={this.state.countryList} class='dropdown' handleChange={this.handleChange} value={this.state.selectedCountry}/> \n          <br/>\n          <h2>{this.state.selectedCountry}</h2>\n          <img src={this.state.countryData.flag} alt='flag' height='100px' width='100px'\n          />\n        </div>\n        <br/>\n        <div className='bottomContainer'>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Location: {this.state.countryData.subregion}</h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Area: {this.state.countryData.area} km&sup2;</h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Population: {this.state.countryData.population}</h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Capital: {this.state.countryData.capital}</h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Language: </h3>\n          <img src='https://image.flaticon.com/icons/png/128/93/93618.png' alt='' className='smallIcon'/>\n          <h3 className='subtitle'>Currency: </h3>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n\n\n/* <select className='dropdown' onChange={this.handleChange}>\n            <option>Choose a country</option>\n            <option>Russia</option>\n            <option>New Zealand</option>\n            <option>Hungary</option>\n          </select> */"]},"metadata":{},"sourceType":"module"}